/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface DeviceNavigationBar {
        /**
          * Sets the background color of the navigation bar
          * @default 'transparent'
          * @example // dark style <device-navigation-bar color="#fff" background="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "background": string;
        /**
          * Set the color of the navigation bar
          * @default '#000'
          * @example // dark style <device-navigation-bar color="#fff" background="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "color": string;
        /**
          * Predefined device descriptor name, such as "iPhone X" or "Pixel 2". For a complete list please see: `DEVICES` at ./../utils/device.ts
          * @default {{AUTO_DETECTION}}
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "device": string;
        /**
          * (Android only) Sets the color to fill the icons in the navigation bar.
          * @default 'none'
          * @example <device-navigation-bar device="iPhone X" fill="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "fill": string;
        /**
          * Sets the height of the navigation bar. By default, the height is derived from the specified device safe-area, but it can also be adjusted manually.
          * @default {{DEVICE}}.safeArea.bottom
          * @example <device-navigation-bar device="iPhone X" height="100px"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "height": string;
        /**
          * Hides the Statusbar
          * @default false
          * @example <device-navigation-bar hide></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "hide": boolean;
        /**
          * Set the Statusbar inline.
          * @default false
          * @example <device-navigation-bar inline></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "inline": boolean;
        /**
          * Adds an additional safe-area for the status and navigation bar. The respective height is derived from the specified device. By default, the safe-area is implemented via padding on the body. If an <ion-app /> element is detected, the css variable --ion-safe-area-* will be set.
          * @default true
          * @example <device-navigation-bar safe-area="false"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "safeArea": boolean;
    }
    interface DeviceStatusBar {
        /**
          * Sets the background color of the status bar
          * @default 'transparent'
          * @example // dark style <device-status-bar color="#fff" background="#000"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "background": string;
        /**
          * Set the color of the status bar text
          * @default '#000'
          * @example // dark style <device-status-bar color="#fff" background="#000"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "color": string;
        /**
          * The date to be displayed
          * @default 'Mon Apr 2' // md
          * @default 'Mon Jun 3' // ios
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "date": string;
        /**
          * Predefined device descriptor name, such as "iPhone X" or "Pixel 2". For a complete list please see: `DEVICES` at ./../utils/device.ts
          * @default {{AUTO_DETECTION}}
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "device": string;
        /**
          * Sets the height of the navigation bar. By default, the height is derived from the specified device safe-area, but it can also be adjusted manually.
          * @default {{DEVICE}}.safeArea.top
          * @example <device-status-bar device="iPhone X" height="100px"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "height": string;
        /**
          * Hides the Statusbar
          * @default false
          * @example <device-status-bar hide></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "hide": boolean;
        /**
          * Set the Statusbar inline
          * @default false
          * @example <device-status-bar inline></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "inline": boolean;
        /**
          * The mode determines which platform styles to use.
          * @default 'md'
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "mode": string;
        /**
          * Adds an additional safe-area for the status and navigation bar. The respective height is derived from the specified device. By default, the safe-area is implemented via padding on the body. If an <ion-app /> element is detected, the css variable --ion-safe-area-* will be set.
          * @default true
          * @example <device-status-bar safe-area="false"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "safeArea": boolean;
        /**
          * The time to be displayed
          * @default '12:30' // md
          * @default '9:41' // ios
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "time": string;
    }
}
declare global {
    interface HTMLDeviceNavigationBarElement extends Components.DeviceNavigationBar, HTMLStencilElement {
    }
    var HTMLDeviceNavigationBarElement: {
        prototype: HTMLDeviceNavigationBarElement;
        new (): HTMLDeviceNavigationBarElement;
    };
    interface HTMLDeviceStatusBarElement extends Components.DeviceStatusBar, HTMLStencilElement {
    }
    var HTMLDeviceStatusBarElement: {
        prototype: HTMLDeviceStatusBarElement;
        new (): HTMLDeviceStatusBarElement;
    };
    interface HTMLElementTagNameMap {
        "device-navigation-bar": HTMLDeviceNavigationBarElement;
        "device-status-bar": HTMLDeviceStatusBarElement;
    }
}
declare namespace LocalJSX {
    interface DeviceNavigationBar {
        /**
          * Sets the background color of the navigation bar
          * @default 'transparent'
          * @example // dark style <device-navigation-bar color="#fff" background="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "background"?: string;
        /**
          * Set the color of the navigation bar
          * @default '#000'
          * @example // dark style <device-navigation-bar color="#fff" background="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "color"?: string;
        /**
          * Predefined device descriptor name, such as "iPhone X" or "Pixel 2". For a complete list please see: `DEVICES` at ./../utils/device.ts
          * @default {{AUTO_DETECTION}}
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "device"?: string;
        /**
          * (Android only) Sets the color to fill the icons in the navigation bar.
          * @default 'none'
          * @example <device-navigation-bar device="iPhone X" fill="#000"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "fill"?: string;
        /**
          * Sets the height of the navigation bar. By default, the height is derived from the specified device safe-area, but it can also be adjusted manually.
          * @default {{DEVICE}}.safeArea.bottom
          * @example <device-navigation-bar device="iPhone X" height="100px"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "height"?: string;
        /**
          * Hides the Statusbar
          * @default false
          * @example <device-navigation-bar hide></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "hide"?: boolean;
        /**
          * Set the Statusbar inline.
          * @default false
          * @example <device-navigation-bar inline></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "inline"?: boolean;
        /**
          * Adds an additional safe-area for the status and navigation bar. The respective height is derived from the specified device. By default, the safe-area is implemented via padding on the body. If an <ion-app /> element is detected, the css variable --ion-safe-area-* will be set.
          * @default true
          * @example <device-navigation-bar safe-area="false"></device-navigation-bar>
          * @type {string}
          * @memberof DeviceNavigationBar
         */
        "safeArea"?: boolean;
    }
    interface DeviceStatusBar {
        /**
          * Sets the background color of the status bar
          * @default 'transparent'
          * @example // dark style <device-status-bar color="#fff" background="#000"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "background"?: string;
        /**
          * Set the color of the status bar text
          * @default '#000'
          * @example // dark style <device-status-bar color="#fff" background="#000"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "color"?: string;
        /**
          * The date to be displayed
          * @default 'Mon Apr 2' // md
          * @default 'Mon Jun 3' // ios
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "date"?: string;
        /**
          * Predefined device descriptor name, such as "iPhone X" or "Pixel 2". For a complete list please see: `DEVICES` at ./../utils/device.ts
          * @default {{AUTO_DETECTION}}
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "device"?: string;
        /**
          * Sets the height of the navigation bar. By default, the height is derived from the specified device safe-area, but it can also be adjusted manually.
          * @default {{DEVICE}}.safeArea.top
          * @example <device-status-bar device="iPhone X" height="100px"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "height"?: string;
        /**
          * Hides the Statusbar
          * @default false
          * @example <device-status-bar hide></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "hide"?: boolean;
        /**
          * Set the Statusbar inline
          * @default false
          * @example <device-status-bar inline></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "inline"?: boolean;
        /**
          * The mode determines which platform styles to use.
          * @default 'md'
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "mode"?: string;
        /**
          * Adds an additional safe-area for the status and navigation bar. The respective height is derived from the specified device. By default, the safe-area is implemented via padding on the body. If an <ion-app /> element is detected, the css variable --ion-safe-area-* will be set.
          * @default true
          * @example <device-status-bar safe-area="false"></device-status-bar>
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "safeArea"?: boolean;
        /**
          * The time to be displayed
          * @default '12:30' // md
          * @default '9:41' // ios
          * @type {string}
          * @memberof DeviceStatusBar
         */
        "time"?: string;
    }
    interface IntrinsicElements {
        "device-navigation-bar": DeviceNavigationBar;
        "device-status-bar": DeviceStatusBar;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "device-navigation-bar": LocalJSX.DeviceNavigationBar & JSXBase.HTMLAttributes<HTMLDeviceNavigationBarElement>;
            "device-status-bar": LocalJSX.DeviceStatusBar & JSXBase.HTMLAttributes<HTMLDeviceStatusBarElement>;
        }
    }
}
